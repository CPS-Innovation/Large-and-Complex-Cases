parameters:
  coverageReportsDirectory: ''
  projectName: ''

steps:
  - task: Bash@3
    displayName: 'Generate HTML Coverage Report'
    inputs:
      targetType: 'inline'
      script: |
        export PATH="$PATH:$HOME/.dotnet/tools"

        if ! command -v reportgenerator &> /dev/null; then
          dotnet tool install --global dotnet-reportgenerator-globaltool
        fi

        coverageFiles=$(find "$AGENT_TEMPDIRECTORY" -type f -name "coverage.cobertura.xml")

        if [ -n "$coverageFiles" ]; then
          coverageFilePaths=$(echo "$coverageFiles" | paste -sd ";" -)

          reportgenerator \
            -reports:"$coverageFilePaths" \
            -targetdir:"${{ parameters.coverageReportsDirectory }}/html" \
            -reporttypes:"Html;HtmlSummary;Badges;TextSummary" \
            -historydir:"${{ parameters.coverageReportsDirectory }}/history" \
            -title:"${{ parameters.projectName }} Coverage Report" \
            -tag:"$BUILD_BUILDNUMBER" \
            -assemblyfilters:"+*;-*.Tests;-*.WireMock" \
            -classfilters:"+*;-*Tests*;-*Mock*;-*Migrations*" \
            -verbosity:"Info"
        else
          echo "No coverage files found"
        fi
    condition: always()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish HTML Coverage Report'
    inputs:
      pathtoPublish: '${{ parameters.coverageReportsDirectory }}/html'
      artifactName: '${{ parameters.projectName }}-coverage-report'
    condition: always() 