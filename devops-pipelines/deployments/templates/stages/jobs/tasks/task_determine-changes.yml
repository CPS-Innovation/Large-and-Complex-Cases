---
parameters:
  - name: targetLabel
    type: string

steps:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $targetLabel = "${{ parameters.targetLabel }}"
        $lowercaseTargetLabel = $targetLabel.ToLower()
        $files = $(git diff --name-only --relative --diff-filter AMRD $lowercaseTargetLabel HEAD)
        $temp=$files -split ' '
        $count=$temp.Length
        echo "******** Total changed $count files for $targetLabel ********"

        $applicationTerraformCount=0
        $networkingTerraformCount=0
        $apiCount=0
        $mockCount=0
        $uiCount=0
        $e2eCount=0
        
        For ($i=0; $i -lt $temp.Length; $i++)
        {
          $name=$temp[$i]
          echo "this is $name file"
          if ($name -like 'terraform/application/*')
          {
            echo "application terraform changes detected..."
            $applicationTerraformCount++
          }
          if ($name -like 'terraform/networking/*')
          {
            echo "networking terraform changes detected..."
            $networkingTerraformCount++
          }
          if ($name -like 'CPS.ComplexCases.API/*')
          {
            echo "API changes detected..."
            $apiCount++
          }
          if ($name -like 'CPS.ComplexCases.WireMock/*')
          {
            echo "Wire Mock changes detected..."
            mockCount++
          }
          if ($name -like 'ui/*')
          {
            echo "UI changes detected..."
            $uiCount++
          }
          if ($name -like 'e2e/*')
          {
            echo "e2e test changes detected..."
            $e2eCount++
          }
        }

        Write-Host "##vso[task.setvariable variable=APPLICATION_TERRAFORM_COUNT;isOutput=true]$applicationTerraformCount"
        Write-Host "##vso[task.setvariable variable=NETWORKING_TERRAFORM_COUNT;isOutput=true]$networkingTerraformCount"
        Write-Host "##vso[task.setvariable variable=API_COUNT;isOutput=true]$apiCount"
        Write-Host "##vso[task.setvariable variable=MOCK_COUNT;isOutput=true]$mockCount"
        Write-Host "##vso[task.setvariable variable=UI_COUNT;isOutput=true]$uiCount"
        Write-Host "##vso[task.setvariable variable=E2E_TESTS_COUNT;isOutput=true]$e2eCount"
    name: Change_Results
    displayName: Processing changes to repo