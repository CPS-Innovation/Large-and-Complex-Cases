---
trigger: none
pr: none

schedules:
  - cron: "0 07 * * 0"  # Weekly on a Sunday morning at 6am - ensure the build agent image is up-to-date
    displayName: Weekly Sunday night build-agent refresh
    branches:
      include:
        - main
    always: true

variables:
  - group: complex-cases-global
  - name: base-agent-image
    value: "Canonical:ubuntu-24_04-lts:server-gen1:linux"

pool:
  vmImage: ubuntu-latest

stages:
  - stage: create_version
    displayName: Determine version number
    jobs:
      - job: determine_version
        displayName: Determine version
        steps:
          - template: steps/git-version.yml

  - stage: image_builder_pre_prod
    displayName: PRE-PROD - Build VM Image
    dependsOn: create_version
    #pool:
    #  name: $(build-agent-pre-prod)
    variables:
      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
    jobs:
      - job: build
        displayName: PRE-PROD - Build Image
        steps:
          - template: steps/check-package-sources.yml
            parameters:
              taskDisplayName: 'Check Package Sources'
              
          - template: ../deployments/templates/stages/jobs/tasks/task_get-credentials.yml
            parameters:
              azureSubscription: $(azure-subscription-pre-prod)
              
          - template: steps/create-build-agent-image.yml
            parameters:
              clientId: $(clientId)
              clientSecret: $(clientSecret)
              tenantId: $(tenantId)
              subscriptionId: $(subscriptionId)
              subscriptionName: $(azure-subscription-pre-prod)
              resourceGroup: $(build-agent-resource-group-pre-prod)
              storageAccount: $(build-agent-storage-account-pre-prod)
              versionSha: $(versionSha)
              baseImage: $(base-agent-image)
              additionalBuilderParams: '{"vm_size":"Standard_D4s_v3","virtual_network_resource_group_name":"RG-LaCC-connectivity","virtual_network_name":"VNET-LaCC-WANNET","virtual_network_subnet_name":"LaCC-scale-set-subnet"}'

  #- stage: image_builder_prod
  #  displayName: PROD - Build VM Image
  #  dependsOn: create_version
  #  pool:
  #    name: $(build-agent-prod)
  #  variables:
  #    versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
  #  jobs:
  #    - job: build
  #      displayName: PROD - Build Image
  #      steps:
  #        - template: steps/check-package-sources.yml
  #          parameters:
  #            taskDisplayName: 'Check Package Sources'
  #            
  #        - template: ../deployments/templates/stages/jobs/tasks/task_get-credentials.yml
  #          parameters:
  #            azureSubscription: $(azure-subscription-prod)
  #            
  #        - template: steps/create-build-agent-image.yml
  #          parameters:
  #            clientId: $(clientId)
  #            clientSecret: $(clientSecret)
  #            tenantId: $(tenantId)
  #            subscriptionId: $(subscriptionId)
  #            subscriptionName: $(azure-subscription-prod)
  #            resourceGroup: $(build-agent-resource-group-prod)
  #            storageAccount: $(build-agent-storage-account-prod)
  #            versionSha: $(versionSha)
  #            baseImage: $(base-agent-image)
  #            additionalBuilderParams: '{"vm_size":"Standard_D4s_v3","virtual_network_resource_group_name":"RG-LaCC-connectivity","virtual_network_name":"VNET-LaCC-WANNET","virtual_network_subnet_name":"LaCC-scale-set-subnet"}'

  - stage: update_scale_set_pre_prod
    displayName: Update PRE-PROD
    dependsOn:
      - create_version
      - image_builder_pre_prod
    variables:
      versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
    jobs:
      - job: update
        displayName: Update Resources
        steps:
          - template: steps/check-package-sources.yml
            parameters:
              taskDisplayName: 'Re-Check Package Sources'
              
          - template: ../deployments/templates/stages/jobs/tasks/task_get-credentials.yml
            parameters:
              azureSubscription: $(azure-subscription-pre-prod)

          - template: steps/update-image-version.yml
            parameters:
              clientId: $(clientId)
              clientSecret: $(clientSecret)
              tenantId: $(tenantId)
              subscriptionId: $(subscriptionId)
              resourceGroup: $(build-agent-resource-group-pre-prod)
              agentPoolName: $(build-agent-pool-name-pre-prod)
              versionSha: $(versionSha)

  #- stage: update_scale_set_prod
  #  displayName: Update PROD Resources
  #  dependsOn:
  #    - create_version
  #    - image_builder_prod
  #  variables:
  #    versionSha: $[format('{0}{1}',stageDependencies.create_version.determine_version.outputs['versioning.versionShortSha'], variables['Build.BuildId']) ]
  #  jobs:
  #    - job: update
  #      displayName: Update PROD
  #      steps:
  #        - template: steps/check-package-sources.yml
  #          parameters:
  #            taskDisplayName: 'Re-Check Package Sources'
  #            
  #        - template: ../deployments/templates/stages/jobs/tasks/task_get-credentials.yml
  #          parameters:
  #            azureSubscription: $(azure-subscription-prod)
  #
  #        - template: steps/update-image-version.yml
  #          parameters:
  #            clientId: $(clientId)
  #            clientSecret: $(clientSecret)
  #            tenantId: $(tenantId)
  #            subscriptionId: $(subscriptionId)
  #            resourceGroup: $(build-agent-resource-group-prod)
  #            agentPoolName: $(build-agent-pool-name-prod)
  #            versionSha: $(versionSha)
